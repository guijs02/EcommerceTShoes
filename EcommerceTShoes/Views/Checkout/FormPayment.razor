@using EcommerceWeb.Model
@using Microsoft.AspNetCore.Components.Forms

<link href="stylePayment.css" rel="stylesheet" />
<link href="~/styleValidationMessage.css" rel="stylesheet" />

<EditForm Model="payment" OnValidSubmit="Confirmation">
    <DataAnnotationsValidator />
    <div class="container p-0">
        <div class="card px-4">
            <p class="h8 py-3">Payment Details</p>
            <div class="row gx-3">
                <div class="col-12">
                    <div class="d-flex flex-column">
                        <p class="text mb-1">Person Name</p>
                        <input class="form-control mb-3" type="text" placeholder="Name" @bind-value="payment.Nome" />
                        <ValidationMessage For="() => payment.Nome" class="validation-message"/>
                    </div>
                </div>
                <div class="col-12">
                    <div class="d-flex flex-column">
                        <p class="text mb-1">Card Number</p>
                        <input class="form-control mb-3" type="text" placeholder="1234 5678 435678" @bind-value="payment.Numero" />
                        <ValidationMessage For="() => payment.Numero" class="validation-message"/>
                    </div>
                </div>
                <div class="col-6">
                    <div class="d-flex flex-column">
                        <p class="text mb-1">Expiry</p>
                        <input class="form-control mb-3" type="text" placeholder="MM/YYYY" @bind-value="payment.Validade" />
                        <ValidationMessage For="() => payment.Validade" class="validation-message"/>
                    </div>
                </div>
                <div class="col-6">
                    <div class="d-flex flex-column">
                        <p class="text mb-1">CVV/CVC</p>
                        <input class="form-control mb-3 pt-2 " type="password" placeholder="***" @bind-value="payment.Cvv" />
                        <ValidationMessage For="() => payment.Cvv" class="validation-message"/>
                    </div>
                </div>
              
                <div class="col-12">
                    <button class="btn btn-primary mb-3" type="submit">
                        <span class="ps-3">
                            Pay
                        </span>
                        <span class="fas fa-arrow-right"></span>
                        @if (Loading)
                        {
                            <Spinner />
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public EventCallback<PaymentViewModel> PaymentClick { get; set; }

    PaymentViewModel payment { get; set; } = new();
    public bool Loading { get; set; }

    public async Task Confirmation(EditContext editContext)
    {
        await ExibirSpinner();
        await PaymentClick.InvokeAsync(payment);
        await Task.CompletedTask;

    }
    private async Task ExibirSpinner()
    {
        Loading = true;
        await Task.Delay(4000).ContinueWith(_ => Loading = false);
    }
}

<style>

.validation-message {
    color: red;
     font-size:14px;
     transform: translateY(-80%);
}
    
</style>