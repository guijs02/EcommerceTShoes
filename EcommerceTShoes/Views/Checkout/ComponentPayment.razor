@page "/pagamento"
@using BlazorBootstrap
@using EcommerceAPI.Services.Interfaces
@using EcommerceWeb.Model
@using EcommerceWeb.Services;
@using Microsoft.AspNetCore.Components

@inject NavigationManager _navigation
@inject ICarrinhoService _cartService

<head>
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
</head>

<AuthorizeView>
    <Authorized>
        <body>

        <section class="h-100 gradient-custom">
            <div class="container py-5">
                <div class="row d-flex justify-content-center align-items-start my-4">
                    <div class="col-md-8">
                        <div class="card mb-4">
                            <div class="card-header py-3">
                                <h5 class="mb-0">Cart - items</h5>
                            </div>
                            <div class="card-body">
                                <!-- Single item -->
                                <Virtualize Items="ListCarrinho" Context="item">

                                    <div class="row">
                                        <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                                            <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                                                <img src="@item.ImagemUrl"
                                                     class="w-100 h-100" alt="Blue Jeans Jacket" />
                                                <a href="#!">
                                                    <div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
                                                </a>
                                            </div>
                                        </div>

                                        <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                            <p><strong>@item.Nome</strong></p>
                                            <p>@item.Descricao</p>
                                            <p>Quantidade: @item.Quantidade</p>
                                            <p>Tamanho: @item.Tamanho</p>

                                        </div>

                                        <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                            <p class="text-start text-md-center">
                                                <strong>@((item.Preco * item.Quantidade).ToString("C2")) </strong>
                                            </p>
                                        </div>
                                    </div>

                                    <hr class="my-4" />

                                </Virtualize>

                            </div>
                        </div>
                        <Accordion>
                            <AccordionItem Title="Pagamento">
                                <Content>

                                    <div class="card-body">
                                        <p><strong>We accept</strong></p>
                                        <img class="me-2" width="45px"
                                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg"
                                             alt="Visa" />
                                        <img class="me-2" width="45px"
                                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg"
                                             alt="American Express" />
                                        <img class="me-2" width="45px"
                                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg"
                                             alt="Mastercard" />
                                        <br />
                                        <br />
                                        <FormPayment PaymentClick="async (payment) => await Checkout(payment)">

                                        </FormPayment>

                                    </div>


                                </Content>
                            </AccordionItem>
                        </Accordion>
                     
                    </div>
                    <div class="col-md-4">
                        <div class="card mb-4">
                            <div class="card-header py-3">
                                <h5 class="mb-0">Súmario</h5>
                            </div>
                            <div class="card-body">
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                        Frete
                                        <span>Gratis</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                        <div>
                                            <strong>Total:</strong>
                                        </div>
                                        <span><strong>@viewModel.TotalCompraView</strong></span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        </body>

    </Authorized>
    <NotAuthorized>

        <Login IsRedirectToCheckout=true>

        </Login>

    </NotAuthorized>

</AuthorizeView>

<style>
 body{
     min-height:50vh;
     width:100vw;
     padding: 0px;
 }


</style>
@code {
    public List<CarrinhoDeCompraViewModel> ListCarrinho { get; set; } = new();
    public bool Loading { get; set; }
    OrderDetails orderDetails { get; set; }

    CarrinhoDeCompraViewModel viewModel = new();

    protected override async Task OnInitializedAsync()
    {
        orderDetails = new();
        ListCarrinho = await _cartService.GetAllCarrinho();
        viewModel.ObterTotalCompra(ListCarrinho,true);
        await base.OnInitializedAsync();
    }
    public async Task Checkout(PaymentViewModel payment)
    {

        try
        {
            orderDetails.Cart = ListCarrinho;
            orderDetails.Payment = payment;
            orderDetails.OrderSummary.ValorTotal = (decimal)viewModel.ObterTotalCompra(ListCarrinho, false);

            await _cartService.Checkout(orderDetails);
            _navigation.NavigateTo("/paymentSucess");
            StateHasChanged();

        }
        catch (Exception e)
        {
            throw;
        }

    }
    private async Task ExibirSpinner()
    {
        Loading = true;
        await Task.Delay(4000).ContinueWith(_ => Loading = false);
    }
}
