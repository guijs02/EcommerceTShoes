@page "/Cadastrar"
@using EcommerceWeb.Services;
@using EcommerceWeb.Services.Interfaces;

@using LoginAPI.Dto;
@using Microsoft.AspNetCore.Components.Forms;

@inject IUsuarioService _service;
@inject NavigationManager navigation

@if (OnInitializedCompleted)
{
    <EditForm Model="usuario" OnValidSubmit="CadastrarUsuario">

        <DataAnnotationsValidator />
        <div class="container d-flex align-items-center justify-content-center vh-100">
            <div class="col-md-4">
                <div class="card shadow">
                    <div class="card-body">
                        <h1 class="card-title text-center mb-4">Sign-In</h1>
                        <div class="mb-3">
                            <label class="form-label">Nome</label>
                            <input type="text"  @bind-value="usuario.Username" class="form-control form-control-sm" id="nome" placeholder="Digite seu nome" />
                            <ValidationMessage For="() => usuario.Username"  class="validation-message"/>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <input type="email"  class="form-control form-control-sm" @bind-value="usuario.Email" id="senha" placeholder="Digite seu email" />
                            <ValidationMessage For="() => usuario.Email" class="validation-message" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Senha</label>
                            <input type="password" class="form-control form-control-sm" @bind-value="usuario.Password" id="senha" placeholder="Digite sua senha" />
                            <ValidationMessage For="() => usuario.Password"  class="validation-message"/>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Confirmar Senha</label>
                            <input type="password" class="form-control form-control-sm" id="confirmar_senha" @bind-value="usuario.PasswordConfirmation" placeholder="Confirme sua senha" />
                            <ValidationMessage For="() => usuario.PasswordConfirmation"  class="validation-message"/>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary btn-block" type="submit">Cadastrar</button>
                        </div>
                        <br>
                        <a href="/Login">Ja possui uma conta? Login</a>
                    </div>

                    @if (!string.IsNullOrEmpty(Mensagem))
                    {
                        <p class="text-danger text-center">@Mensagem</p>
                    }

                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    CreateUsuarioDto usuario { get; set; }
    public bool OnInitializedCompleted { get; set; }
    public string Mensagem { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        usuario = new();
        OnInitializedCompleted = true;
    }
    public async Task CadastrarUsuario()
    {
        try
        {
            await _service.Cadastro(usuario);
            navigation.NavigateTo("login");
        }
        catch (Exception ex)
        {
            Mensagem = ex.Message;
        }

    }

}
